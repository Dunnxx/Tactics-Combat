using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class NPCMove : TacticsMove
{
    GameObject target;

    // Use this for initialization
    void Start()
    {
        Init();
        calculateStats();
        
    }
    
    // Update is called once per frame
    void Update () {

        Debug.DrawRay(transform.position, transform.forward);

        if (!turn)
        {
            return;
        }

        if (action)
        {

            endTurn();
        }


        if (!moving && !hasMoved)
        {
            
            FindNearestTarget();
            CalculatePath();
            FindSelectableTiles();
            
            

        }
        else if (!moving && hasMoved)
        {
            action = true;
        }
        else
        {

            Move();
            hasMoved = true;
        }
    }



    void CalculatePath()
    {
        Tile targetTile = GetTargetTile(target);
        FindPath(targetTile);
      
    }

    void FindNearestTarget()
    {
        GameObject[] targets = GameObject.FindGameObjectsWithTag("Player");

        //make advanced AI here this is simple 

        GameObject nearest = null;
        float distance = Mathf.Infinity;

        foreach(GameObject obj in targets)
        {
            float d = Vector3.Distance(transform.position, obj.transform.position);
            //vector3.mag more effectaint 
            if (d < distance)
            {
                distance = d;
                nearest = obj;
                
            }

        }


        target = nearest;

    }

}
